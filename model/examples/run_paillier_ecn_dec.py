#!/usr/bin/env python3

import sys
sys.path.append('../')
import sec256k1.paillier as paillier

if __name__ == "__main__":

    # keys

    p = 0x94f689d07ba20cf7c7ca7ccbed22ae6b40c426db74eaee4ce0ced2b6f52a5e136663f5f1ef379cdbb0c4fdd6e4074d6cff21082d4803d43d89e42fd8dfa82b135aa31a8844ffea25f255f956cbc1b9d8631d01baf1010d028a190b94ce40f3b72897e8196df19edf1ff62e6556f2701d52cef1442e3301db7608ecbdcca703db
    q = 0x9a9ad73f246df853e129c589925fdad9df05606a61081e62e72be4fb33f6e5ec492cc734f28bfb71fbe2ba9a11e4c02e2c0d103a5cbb0a9d6402c07de63b1b995dd72ac8f29825d66923a088b421fb4d52b0b855d2f5dde2be9b0ca0cee6f7a94e5566735fe6cff1fcad3199602f88528d19aa8d0263adff8f5053c38254a2a3

    n, g, lp, lq, mp, mq = paillier.keys(p, q)
    print("n  {}".format(hex(n)[2:].zfill(256)))
    print("g  {}".format(hex(g)[2:].zfill(256)))
    print("lp {}".format(hex(lp)[2:].zfill(128)))
    print("mp {}".format(hex(mp)[2:].zfill(128)))
    print("lq {}".format(hex(lq)[2:].zfill(128)))
    print("mq {}".format(hex(mq)[2:].zfill(128)))

    # encrypt plaintext 1
    r1 = 0xc5947fda2edea04c1f87c207e0bab17aff5f77ac21d04cb194631efd1f7256dc37de9473fc86009df36206974859c09023ac8179b02aacea8d89a01f4de161db955d450cef55ce959897636973b952371e349778e67c61ef6fae5f73fd728d423a594b6a76d5faca97d59d6ae40c53f3bd42dfccc93183e355422ba7af308a87d32c0352d478156275f98bc74e9ed4f2c7a9853c9f35b996fafe765b56c7f2e83771c6b676b75436e5c1697b838b3908aee92001cbccf3bf6cfb7aaea27a358a12cfe1ddde886b975ae14517e5912eba3ff9792e46403a998edd371020bbc5fbd6a705e669383303030ef79653ce16e13122233c626bb101ee8dd27bf4ff86
    pt1 = 2
    print("pt1 {}".format(hex(pt1)[2:].zfill(256)))
    ct1, r = paillier.encrypt(n, g, pt1, r1)
    print("ct1 {}".format(hex(ct1)[2:].zfill(512)))
    print("r {}".format(hex(r)[2:].zfill(256)))
    assert r1 == r, "r1 != r"

    # decrypt ciphertext 1
    pt1 = paillier.decrypt(p, q, lp, lq, mp, mq, ct1)
    print("pt1 {}".format(hex(pt1)[2:].zfill(256)))
    print("pt1 {}".format(pt1))
